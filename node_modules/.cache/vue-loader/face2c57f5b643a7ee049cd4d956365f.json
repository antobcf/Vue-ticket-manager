{"remainingRequest":"/Users/antoniobelculfine/Library/Mobile Documents/com~apple~CloudDocs/Stage/Ticket-Asset-Management/interface/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/antoniobelculfine/Library/Mobile Documents/com~apple~CloudDocs/Stage/Ticket-Asset-Management/interface/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/antoniobelculfine/Library/Mobile Documents/com~apple~CloudDocs/Stage/Ticket-Asset-Management/interface/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/antoniobelculfine/Library/Mobile Documents/com~apple~CloudDocs/Stage/Ticket-Asset-Management/interface/src/components/RegistrationForm.vue?vue&type=template&id=ad48d266&","dependencies":[{"path":"/Users/antoniobelculfine/Library/Mobile Documents/com~apple~CloudDocs/Stage/Ticket-Asset-Management/interface/src/components/RegistrationForm.vue","mtime":1628602740830},{"path":"/Users/antoniobelculfine/Library/Mobile Documents/com~apple~CloudDocs/Stage/Ticket-Asset-Management/interface/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/antoniobelculfine/Library/Mobile Documents/com~apple~CloudDocs/Stage/Ticket-Asset-Management/interface/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/antoniobelculfine/Library/Mobile Documents/com~apple~CloudDocs/Stage/Ticket-Asset-Management/interface/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/antoniobelculfine/Library/Mobile Documents/com~apple~CloudDocs/Stage/Ticket-Asset-Management/interface/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}